{"version":3,"file":"react-parallax-tilt.umd.js","sources":["../src/common/utils.ts","../src/features/glare/Glare.ts","../src/features/tilt/Tilt.ts","../src/react-parallax-tilt/defaultProps.ts","../src/features/tilt/defaultProps.ts","../src/features/glare/defaultProps.ts","../src/react-parallax-tilt/ReactParallaxTilt.tsx"],"sourcesContent":["export function setTransition<T extends HTMLElement>(\r\n  element: T,\r\n  property: 'all' | 'opacity',\r\n  duration: number,\r\n  timing: string,\r\n): void {\r\n  element.style.transition = `${property} ${duration}ms ${timing}`;\r\n}\r\n\r\nexport function constrainToRange(value: number, rangeMin: number, rangeMax: number): number {\r\n  return Math.min(Math.max(value, rangeMin), rangeMax);\r\n}\r\n","import { IStyle } from '../../common/IStyle';\r\nimport { ElementSizePosition, ClientPosition } from '../../common/types';\r\nimport { constrainToRange } from '../../common/utils';\r\n\r\nimport { GlareProps, GlareSize } from './types';\r\n\r\nexport class Glare implements IStyle {\r\n  public glareWrapperEl: HTMLDivElement;\r\n  public glareEl: HTMLDivElement;\r\n\r\n  public glareAngle = 0;\r\n  public glareOpacity = 0;\r\n\r\n  constructor(wrapperElSize: ElementSizePosition) {\r\n    this.glareWrapperEl = document.createElement('div');\r\n    this.glareEl = document.createElement('div');\r\n    this.glareWrapperEl.appendChild(this.glareEl);\r\n    this.glareWrapperEl.className = 'glare-wrapper';\r\n    this.glareEl.className = 'glare';\r\n\r\n    const styleGlareWrapper = {\r\n      position: 'absolute',\r\n      top: '0',\r\n      left: '0',\r\n      width: '100%',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n    };\r\n\r\n    const glareSize = this.calculateGlareSize(wrapperElSize);\r\n    const styleGlare = {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      'transform-origin': '0% 0%',\r\n      'pointer-events': 'none',\r\n      width: `${glareSize.width}px`,\r\n      height: `${glareSize.height}px`,\r\n    };\r\n\r\n    Object.assign(this.glareWrapperEl.style, styleGlareWrapper);\r\n    Object.assign(this.glareEl.style, styleGlare);\r\n  }\r\n\r\n  private calculateGlareSize = (wrapperElSize: ElementSizePosition): GlareSize => {\r\n    const { width: w, height: h } = wrapperElSize;\r\n    const wrapperElDiagonal = Math.sqrt(w! ** 2 + h! ** 2);\r\n    return {\r\n      width: wrapperElDiagonal,\r\n      height: wrapperElDiagonal,\r\n    };\r\n  };\r\n\r\n  public setSize = (wrapperElSize: ElementSizePosition): void => {\r\n    const glareSize = this.calculateGlareSize(wrapperElSize);\r\n    this.glareEl.style.width = `${glareSize.width}px`;\r\n    this.glareEl.style.height = `${glareSize.height}px`;\r\n  };\r\n\r\n  public update = (\r\n    wrapperElClientPosition: ClientPosition,\r\n    props: GlareProps,\r\n    flipVertically: boolean,\r\n    flipHorizontally: boolean,\r\n  ): void => {\r\n    this.updateAngle(wrapperElClientPosition, props.glareReverse!);\r\n    this.updateOpacity(wrapperElClientPosition, props, flipVertically, flipHorizontally);\r\n  };\r\n\r\n  private updateAngle = (wrapperElClientPosition: ClientPosition, glareReverse: boolean): void => {\r\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\r\n\r\n    const rad2Deg = 180 / Math.PI;\r\n    // top 0째, right +90째, bottom -+180째, left -90째\r\n    const glareAngle = xPercentage ? Math.atan2(yPercentage, -xPercentage) * rad2Deg : 0;\r\n\r\n    const addGlareAngle = glareReverse ? 180 : 0;\r\n    this.glareAngle = glareAngle - addGlareAngle;\r\n  };\r\n\r\n  private updateOpacity = (\r\n    wrapperElClientPosition: ClientPosition,\r\n    props: GlareProps,\r\n    flipVertically: boolean,\r\n    flipHorizontally: boolean,\r\n  ): void => {\r\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\r\n    const { glarePosition, glareReverse, glareMaxOpacity } = props;\r\n\r\n    const flipVerticallyFactor = flipVertically ? -1 : 1;\r\n    const flipHorizontallyFactor = flipHorizontally ? -1 : 1;\r\n    const glareReverseFactor = glareReverse ? -1 : 1;\r\n\r\n    let glareOpacityFactor: number;\r\n    switch (glarePosition) {\r\n      case 'top':\r\n        glareOpacityFactor = -xPercentage! * flipVerticallyFactor * glareReverseFactor;\r\n        break;\r\n      case 'right':\r\n        glareOpacityFactor = yPercentage! * flipHorizontallyFactor * glareReverseFactor;\r\n        break;\r\n      case 'bottom':\r\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor * glareReverseFactor;\r\n        break;\r\n      case 'left':\r\n        glareOpacityFactor = -yPercentage! * flipHorizontallyFactor * glareReverseFactor;\r\n        break;\r\n      case 'all':\r\n        glareOpacityFactor = Math.hypot(xPercentage, yPercentage);\r\n        break;\r\n      default:\r\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor * glareReverseFactor;\r\n    }\r\n\r\n    const glareOpacityFactorRemoveNegative = constrainToRange(glareOpacityFactor, 0, 100);\r\n    this.glareOpacity = (glareOpacityFactorRemoveNegative * glareMaxOpacity!) / 100;\r\n  };\r\n\r\n  public render = (props: GlareProps): void => {\r\n    const { glareColor } = props;\r\n    this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`;\r\n    this.glareEl.style.opacity = this.glareOpacity.toString();\r\n\r\n    const linearGradient = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`;\r\n    this.glareEl.style.background = linearGradient;\r\n  };\r\n}\r\n","import { IStyle } from '../../common/IStyle';\r\nimport { ClientPosition } from '../../common/types';\r\nimport { constrainToRange } from '../../common/utils';\r\n\r\nimport { TiltProps } from './types';\r\n\r\nconst TILT_ANGLE_CONSTRAINT = 90;\r\n\r\nexport class Tilt<T extends HTMLElement> implements IStyle {\r\n  public glareAngle = 0;\r\n  public glareOpacity = 0;\r\n\r\n  public tiltAngleX = 0;\r\n  public tiltAngleY = 0;\r\n  public tiltAngleXPercentage = 0;\r\n  public tiltAngleYPercentage = 0;\r\n\r\n  public update = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\r\n    this.updateTilt(wrapperElClientPosition, props);\r\n    this.updateTiltManualInput(wrapperElClientPosition, props);\r\n    this.updateTiltReverse(props);\r\n    this.updateTiltLimits(props);\r\n  };\r\n\r\n  private updateTilt = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\r\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\r\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\r\n\r\n    const tiltTowardMouse = -1;\r\n    this.tiltAngleX = (xPercentage! * tiltMaxAngleX!) / 100;\r\n    this.tiltAngleY = ((yPercentage! * tiltMaxAngleY!) / 100) * tiltTowardMouse;\r\n  };\r\n\r\n  private updateTiltManualInput = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\r\n    const { tiltAngleXManual, tiltAngleYManual, tiltMaxAngleX, tiltMaxAngleY } = props;\r\n\r\n    const isManualInputIgnoreOtherInputs = tiltAngleXManual !== null || tiltAngleYManual !== null;\r\n    if (isManualInputIgnoreOtherInputs) {\r\n      this.tiltAngleX = tiltAngleXManual !== null ? tiltAngleXManual! : 0;\r\n      this.tiltAngleY = tiltAngleYManual !== null ? tiltAngleYManual! : 0;\r\n      wrapperElClientPosition.xPercentage = (100 * this.tiltAngleX) / tiltMaxAngleX!;\r\n      wrapperElClientPosition.yPercentage = (100 * this.tiltAngleY) / tiltMaxAngleY!;\r\n    }\r\n  };\r\n\r\n  private updateTiltReverse = (props: TiltProps): void => {\r\n    const tiltReverse = props.tiltReverse ? -1 : 1;\r\n    this.tiltAngleX = tiltReverse * this.tiltAngleX;\r\n    this.tiltAngleY = tiltReverse * this.tiltAngleY;\r\n  };\r\n\r\n  private updateTiltLimits = (props: TiltProps): void => {\r\n    const { tiltAxis } = props;\r\n\r\n    this.tiltAngleX = constrainToRange(this.tiltAngleX, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\r\n    this.tiltAngleY = constrainToRange(this.tiltAngleY, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\r\n\r\n    const isOnlyOneAxisEnabledForTilting = tiltAxis;\r\n    if (isOnlyOneAxisEnabledForTilting) {\r\n      this.tiltAngleX = tiltAxis === 'x' ? this.tiltAngleX : 0;\r\n      this.tiltAngleY = tiltAxis === 'y' ? this.tiltAngleY : 0;\r\n    }\r\n  };\r\n\r\n  public updateTiltAnglesPercentage = (props: TiltProps): void => {\r\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\r\n\r\n    this.tiltAngleXPercentage = (this.tiltAngleX / tiltMaxAngleX!) * 100;\r\n    this.tiltAngleYPercentage = (this.tiltAngleY / tiltMaxAngleY!) * 100;\r\n  };\r\n\r\n  public render = (element: T): void => {\r\n    element.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\r\n  };\r\n}\r\n","import { defaultGlareProps } from '../features/glare/defaultProps';\nimport { defaultTiltProps } from '../features/tilt/defaultProps';\n\nimport { Props } from './types';\n\nexport const defaultProps: Props = {\n  scale: 1,\n  perspective: 1000,\n  flipVertically: false,\n  flipHorizontally: false,\n  reset: true,\n  transitionEasing: 'cubic-bezier(.03,.98,.52,.99)',\n  transitionSpeed: 400,\n  trackOnWindow: false,\n  gyroscope: false,\n  overflowHidden: false,\n  ...defaultTiltProps,\n  ...defaultGlareProps,\n};\n","import { TiltProps } from './types';\r\n\r\nexport const defaultTiltProps: TiltProps = {\r\n  tiltEnable: true,\r\n  tiltReverse: false,\r\n  tiltAngleXInitial: 0,\r\n  tiltAngleYInitial: 0,\r\n  tiltMaxAngleX: 20,\r\n  tiltMaxAngleY: 20,\r\n  tiltAxis: null,\r\n  tiltAngleXManual: null,\r\n  tiltAngleYManual: null,\r\n};\r\n","import { GlareProps } from './types';\r\n\r\nexport const defaultGlareProps: GlareProps = {\r\n  glareEnable: false,\r\n  glareMaxOpacity: 0.7,\r\n  glareColor: '#ffffff',\r\n  glarePosition: 'bottom',\r\n  glareReverse: false,\r\n};\r\n","import React, { PureComponent, MouseEvent, TouchEvent } from 'react';\n\nimport { setTransition, constrainToRange } from '../common/utils';\nimport { Glare } from '../features/glare/Glare';\nimport { Tilt } from '../features/tilt/Tilt';\n\nimport { defaultProps } from './defaultProps';\nimport { Props, SupportedEvent, EventType, CustomEventType, WrapperElement } from './types';\n\nclass ReactParallaxTilt extends PureComponent<Props> {\n  public static defaultProps = defaultProps;\n  private containerElement: HTMLDivElement | null = null;\n  private wrapperEl: WrapperElement<HTMLDivElement> = {\n    node: null,\n    size: {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n    },\n    clientPosition: {\n      x: null,\n      y: null,\n      xPercentage: 0,\n      yPercentage: 0,\n    },\n    updateAnimationId: null,\n    scale: 1,\n  };\n  private tilt: Tilt<HTMLDivElement> | null = null;\n  private glare: Glare | null = null;\n\n  private childrenImgsCounter = 0;\n  private childrenImgsLength = 0;\n\n  public componentDidMount() {\n    this.loadWrapperAndChildElements();\n    this.tilt = new Tilt<HTMLDivElement>();\n    this.initGlare();\n    this.addEventListeners();\n    const autoreset = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n    this.mainLoop(autoreset);\n    const initialEvent = new CustomEvent<CustomEventType>('initial' as CustomEventType);\n    this.emitOnMove(initialEvent);\n  }\n\n  public componentWillUnmount() {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.removeEventListeners();\n  }\n\n  public componentDidUpdate() {\n    const eventType = new CustomEvent<CustomEventType>('propChanged' as CustomEventType);\n    this.mainLoop(eventType);\n  }\n\n  private addEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.addEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.addEventListener('mouseenter', this.onEnter);\n      window.addEventListener('mousemove', this.onMove);\n      window.addEventListener('mouseout', this.onLeave);\n      window.addEventListener('touchstart', this.onEnter);\n      window.addEventListener('touchmove', this.onMove);\n      window.addEventListener('touchend', this.onLeave);\n    }\n\n    if (gyroscope) {\n      this.addDeviceOrientationEventListener();\n    }\n  }\n\n  /* istanbul ignore next */\n  private addDeviceOrientationEventListener = async () => {\n    if (!window.DeviceOrientationEvent && process.env.NODE_ENV === 'development') {\n      console.warn(\"Browser doesn't support Device Orientation.\");\n      return;\n    }\n\n    const iOS13OrHigherDevice = typeof DeviceMotionEvent.requestPermission === 'function';\n    if (iOS13OrHigherDevice) {\n      try {\n        const response = await DeviceOrientationEvent.requestPermission();\n        if (response === 'granted') {\n          window.addEventListener('deviceorientation', this.onMove);\n        }\n        return;\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n\n    window.addEventListener('deviceorientation', this.onMove);\n  };\n\n  private removeEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.removeEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.removeEventListener('mouseenter', this.onEnter);\n      window.removeEventListener('mousemove', this.onMove);\n      window.removeEventListener('mouseout', this.onLeave);\n      window.removeEventListener('touchstart', this.onEnter);\n      window.removeEventListener('touchmove', this.onMove);\n      window.removeEventListener('touchend', this.onLeave);\n    }\n\n    // jest - instance of DeviceOrientationEvent not possible\n    /* istanbul ignore next */\n    if (gyroscope && window.DeviceOrientationEvent) {\n      window.removeEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  private loadWrapperAndChildElements = () => {\n    const imgs = Array.from(this.wrapperEl.node!.getElementsByTagName('img'));\n    this.childrenImgsLength = imgs.length;\n    if (this.childrenImgsLength === 0) {\n      this.setSize();\n      return;\n    }\n\n    imgs.forEach((img) => {\n      // jest - images are not preloaded\n      /* istanbul ignore next */\n      if (img.complete) {\n        this.allImagesLoaded();\n      } else {\n        img.addEventListener('load', this.allImagesLoaded);\n      }\n    });\n  };\n\n  public allImagesLoaded = () => {\n    this.childrenImgsCounter++;\n    if (this.childrenImgsCounter === this.childrenImgsLength) {\n      this.setSize();\n    }\n  };\n\n  public setSize = () => {\n    this.setWrapperElSize();\n    if (this.glare) {\n      this.glare.setSize(this.wrapperEl.size);\n    }\n  };\n\n  private setWrapperElSize() {\n    const rect = this.wrapperEl.node!.getBoundingClientRect();\n    this.wrapperEl.size.width = this.wrapperEl.node!.offsetWidth;\n    this.wrapperEl.size.height = this.wrapperEl.node!.offsetHeight;\n    this.wrapperEl.size.left = rect.left + window.scrollX;\n    this.wrapperEl.size.top = rect.top + window.scrollY;\n  }\n\n  private initGlare() {\n    const { glareEnable } = this.props;\n\n    if (!glareEnable) {\n      return;\n    }\n\n    this.glare = new Glare(this.wrapperEl.size);\n    this.wrapperEl.node!.appendChild(this.glare.glareWrapperEl);\n  }\n\n  public mainLoop = (event: SupportedEvent) => {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.processInput(event);\n    this.update(event.type);\n    this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n  };\n\n  private onEnter = (event: SupportedEvent) => {\n    const { onEnter } = this.props;\n\n    // Update wrapped tilt component params in case it's being manipulated (position, size, etc.) in consumed application\n    this.setSize();\n\n    // increase performance by notifying browser 'transform' property is just about to get changed\n    this.wrapperEl.node!.style.willChange = 'transform';\n    this.setTransitions();\n\n    if (onEnter) {\n      onEnter(event.type);\n    }\n  };\n\n  private onMove = (event: SupportedEvent): void => {\n    this.mainLoop(event);\n    this.emitOnMove(event);\n  };\n\n  private emitOnMove(event: SupportedEvent) {\n    const { onMove } = this.props;\n    if (!onMove) {\n      return;\n    }\n    let glareAngle = 0;\n    let glareOpacity = 0;\n    if (this.glare) {\n      glareAngle = this.glare.glareAngle;\n      glareOpacity = this.glare.glareOpacity;\n    }\n\n    onMove(\n      this.tilt!.tiltAngleX!,\n      this.tilt!.tiltAngleY!,\n      this.tilt!.tiltAngleXPercentage!,\n      this.tilt!.tiltAngleYPercentage!,\n      glareAngle,\n      glareOpacity,\n      event.type,\n    );\n  }\n\n  private onLeave = (event: SupportedEvent) => {\n    const { onLeave } = this.props;\n    this.setTransitions();\n\n    if (onLeave) {\n      onLeave(event.type);\n    }\n\n    if (this.props.reset) {\n      const autoResetEvent = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n      this.containerElement!.style.clipPath = 'polygon(0 0,100% 0,100% 100%,0,100%)';\n      this.onMove(autoResetEvent);\n    }\n  };\n\n  private processInput = (event: SupportedEvent): void => {\n    const { scale } = this.props;\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n        this.wrapperEl.clientPosition.x = (event as MouseEvent).pageX;\n        this.wrapperEl.clientPosition.y = (event as MouseEvent).pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'touchmove':\n        this.wrapperEl.clientPosition.x = (event as TouchEvent).touches[0].pageX;\n        this.wrapperEl.clientPosition.y = (event as TouchEvent).touches[0].pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      // jest - instance of DeviceOrientationEvent not possible\n      /* istanbul ignore next */\n      case 'deviceorientation':\n        this.processInputDeviceOrientation(event as DeviceOrientationEvent);\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'autoreset':\n        const { tiltAngleXInitial, tiltAngleYInitial, tiltMaxAngleX, tiltMaxAngleY } = this.props;\n        const xPercentage = (tiltAngleXInitial! / tiltMaxAngleX!) * 100;\n        const yPercentage = (tiltAngleYInitial! / tiltMaxAngleY!) * 100;\n        this.wrapperEl.clientPosition.xPercentage = constrainToRange(xPercentage, -100, 100);\n        this.wrapperEl.clientPosition.yPercentage = constrainToRange(yPercentage, -100, 100);\n        this.wrapperEl.scale = 1;\n        break;\n    }\n  };\n\n  // jest - instance of DeviceOrientationEvent not possible\n  /* istanbul ignore next */\n  private processInputDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    if (!event.gamma || !event.beta || !this.props.gyroscope) {\n      return;\n    }\n\n    const { tiltMaxAngleX, tiltMaxAngleY } = this.props;\n\n    const angleX = event.beta; // motion of the device around the x axis in degree in the range:[-180,180]\n    const angleY = event.gamma; // motion of the device around the y axis in degree in the range:[-90,90]\n\n    this.wrapperEl.clientPosition.xPercentage = (angleX! / tiltMaxAngleX!) * 100;\n    this.wrapperEl.clientPosition.yPercentage = (angleY! / tiltMaxAngleY!) * 100;\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.xPercentage,\n      -100,\n      100,\n    );\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.yPercentage,\n      -100,\n      100,\n    );\n  };\n\n  private update = (eventType: EventType | string): void => {\n    const { tiltEnable, flipVertically, flipHorizontally } = this.props;\n\n    const isAngleSetToDefaultAlready = eventType !== 'autoreset';\n    const isAngleRetrievedFromGyroscope = eventType !== 'deviceorientation';\n    const isPropChanged = eventType !== 'propChanged';\n    const isUpdateCalculationNeeded =\n      isAngleSetToDefaultAlready && isAngleRetrievedFromGyroscope && isPropChanged;\n    if (isUpdateCalculationNeeded) {\n      this.updateClientInput();\n    }\n\n    if (tiltEnable) {\n      this.tilt!.update(this.wrapperEl.clientPosition, this.props);\n    }\n\n    this.updateFlip();\n\n    this.tilt!.updateTiltAnglesPercentage(this.props);\n\n    if (this.glare) {\n      this.glare.update(this.wrapperEl.clientPosition, this.props, flipVertically!, flipHorizontally!);\n    }\n  };\n\n  private updateClientInput = (): void => {\n    const { trackOnWindow } = this.props;\n\n    let xTemp;\n    let yTemp;\n    if (trackOnWindow) {\n      const { x, y } = this.wrapperEl.clientPosition;\n\n      xTemp = (y! / window.innerHeight) * 200 - 100;\n      yTemp = (x! / window.innerWidth) * 200 - 100;\n    } else {\n      const {\n        size: { width, height, left, top },\n        clientPosition: { x, y },\n      } = this.wrapperEl;\n\n      xTemp = ((y! - top!) / height!) * 200 - 100;\n      yTemp = ((x! - left!) / width!) * 200 - 100;\n    }\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(xTemp, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(yTemp, -100, 100);\n  };\n\n  private updateFlip = (): void => {\n    const { flipVertically, flipHorizontally } = this.props;\n\n    if (flipVertically) {\n      this.tilt!.tiltAngleX += 180;\n      this.tilt!.tiltAngleY *= -1;\n    }\n    if (flipHorizontally) {\n      this.tilt!.tiltAngleY += 180;\n    }\n  };\n  private hideOverflow() {\n    if (this.containerElement) {\n      let handles = [\n        ...(((this.containerElement.getElementsByClassName('handle') ||\n          []) as unknown) as Array<HTMLDivElement>),\n      ];\n      let elementRect = this.containerElement.getBoundingClientRect();\n\n      this.containerElement.style.clipPath =\n        'polygon(' +\n        handles.map((handle) => {\n          let handleRect = handle.getBoundingClientRect();\n          return (\n            (100 * (handleRect.x - elementRect.x)) / elementRect.width +\n            '% ' +\n            (100 * (handleRect.y - elementRect.y)) / elementRect.height +\n            '%'\n          );\n        }) +\n        ')';\n    }\n  }\n\n  public renderFrame = (): void => {\n    this.resetWrapperElTransform();\n\n    this.renderPerspective();\n    this.tilt!.render(this.wrapperEl.node!);\n    this.renderScale();\n    if (this.glare) {\n      this.glare.render(this.props);\n    }\n    if (this.props.overflowHidden) this.hideOverflow();\n  };\n\n  private resetWrapperElTransform(): void {\n    this.wrapperEl.node!.style.transform = '';\n  }\n\n  private renderPerspective(): void {\n    const { perspective } = this.props;\n\n    this.wrapperEl.node!.style.transform += `perspective(${perspective}px) `;\n  }\n\n  private renderScale(): void {\n    const { scale } = this.wrapperEl;\n\n    this.wrapperEl.node!.style.transform += `scale3d(${scale},${scale},${scale})`;\n  }\n\n  private setTransitions() {\n    const { transitionSpeed, transitionEasing } = this.props;\n    setTransition<HTMLDivElement>(this.wrapperEl.node!, 'all', transitionSpeed!, transitionEasing!);\n    setTransition<HTMLDivElement>(this.containerElement!, 'all', transitionSpeed!, transitionEasing!);\n\n    if (this.glare) {\n      setTransition<HTMLDivElement>(this.glare.glareEl, 'opacity', transitionSpeed!, transitionEasing!);\n    }\n  }\n\n  public render() {\n    const { children, className, style } = this.props;\n    return (\n      <div ref={(el) => (this.containerElement = el)}>\n        <div\n          ref={(el) => (this.wrapperEl.node = el)}\n          onMouseEnter={this.onEnter}\n          onMouseMove={this.onMove}\n          onMouseLeave={this.onLeave}\n          onTouchStart={this.onEnter}\n          onTouchMove={this.onMove}\n          onTouchEnd={this.onLeave}\n          className={className}\n          style={style}\n        >\n          <div\n            className={'handle'}\n            style={{ position: 'absolute', width: '0', height: '0', background: 'none', left: '0', top: '0' }}\n          ></div>\n          <div\n            className={'handle'}\n            style={{\n              position: 'absolute',\n              width: '0',\n              height: '0',\n              background: 'none',\n              right: '0',\n              top: '0',\n            }}\n          ></div>\n          <div\n            className={'handle'}\n            style={{\n              position: 'absolute',\n              width: '0',\n              height: '0',\n              background: 'none',\n              right: '0',\n              bottom: '0',\n            }}\n          ></div>\n          <div\n            className={'handle'}\n            style={{\n              position: 'absolute',\n              width: '0',\n              height: '0',\n              background: 'none',\n              left: '0',\n              bottom: '0',\n            }}\n          ></div>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactParallaxTilt;\n"],"names":["setTransition","element","property","duration","timing","style","transition","constrainToRange","value","rangeMin","rangeMax","Math","min","max","wrapperElSize","this","h","wrapperElDiagonal","sqrt","width","height","glareSize","_this","calculateGlareSize","glareEl","wrapperElClientPosition","props","flipVertically","flipHorizontally","updateAngle","glareReverse","updateOpacity","xPercentage","rad2Deg","PI","glareAngle","atan2","glareOpacityFactor","yPercentage","glareMaxOpacity","flipVerticallyFactor","flipHorizontallyFactor","glareReverseFactor","hypot","glareOpacityFactorRemoveNegative","glareOpacity","glareColor","transform","opacity","toString","background","glareWrapperEl","document","createElement","appendChild","className","styleGlare","position","top","left","transform-origin","pointer-events","Object","assign","overflow","updateTilt","updateTiltManualInput","updateTiltReverse","updateTiltLimits","tiltMaxAngleY","tiltAngleX","tiltAngleY","tiltAngleXManual","tiltAngleYManual","tiltMaxAngleX","tiltReverse","tiltAxis","tiltAngleXPercentage","tiltAngleYPercentage","defaultProps","scale","perspective","reset","transitionEasing","transitionSpeed","trackOnWindow","gyroscope","overflowHidden","tiltEnable","tiltAngleXInitial","tiltAngleYInitial","glareEnable","glarePosition","node","size","clientPosition","x","y","updateAnimationId","window","DeviceOrientationEvent","process","env","NODE_ENV","console","warn","DeviceMotionEvent","requestPermission","_a","addEventListener","onMove","error","err_1","imgs","Array","from","wrapperEl","getElementsByTagName","childrenImgsLength","length","forEach","img","complete","allImagesLoaded","setSize","childrenImgsCounter","setWrapperElSize","glare","event","cancelAnimationFrame","processInput","update","type","requestAnimationFrame","renderFrame","onEnter","willChange","setTransitions","mainLoop","emitOnMove","onLeave","autoResetEvent","CustomEvent","containerElement","clipPath","pageX","pageY","touches","processInputDeviceOrientation","gamma","beta","angleY","eventType","updateClientInput","tilt","updateFlip","updateTiltAnglesPercentage","xTemp","yTemp","innerHeight","innerWidth","_b","_c","_d","resetWrapperElTransform","renderPerspective","render","renderScale","hideOverflow","__extends","ReactParallaxTilt","loadWrapperAndChildElements","Tilt","initGlare","addEventListeners","autoreset","initialEvent","removeEventListeners","addDeviceOrientationEventListener","removeEventListener","rect","getBoundingClientRect","offsetWidth","offsetHeight","scrollX","scrollY","Glare","handles","getElementsByClassName","elementRect_1","map","handle","handleRect","children","React","ref","el","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","right","bottom","PureComponent"],"mappings":"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"}